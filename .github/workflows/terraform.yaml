name: Terraform Plan and Apply with Approval

on:
  push:
    branches:
      - dev

jobs:
  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      plan_artifact_url: ${{ steps.artifact_url.outputs.download_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.2"

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        run: |
          cd dev/
          terraform init

      - name: Terraform Validate
        run: |
          cd dev/
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd dev/
          terraform plan -no-color > plan.txt
          echo "::set-output name=has_changes::$(if [ -s plan.txt ]; then echo 'true'; else echo 'false'; fi)"

      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: dev/plan.txt

      - name: Generate Artifact URL
        id: artifact_url
        run: |
          API_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
          ARTIFACT_INFO=$(curl -s -H "Authorization: Bearer ${{ github.token }}" -H "Accept: application/vnd.github+json" "$API_URL")
          DOWNLOAD_URL=$(echo "$ARTIFACT_INFO" | jq -r '.artifacts[] | select(.name == "terraform-plan") | .archive_download_url')
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform_apply:
    name: Terraform Apply
    needs: terraform_plan
    runs-on: ubuntu-latest
    environment:
      name: dev # Reference the 'dev' environment
      url: ${{ needs.terraform_plan.outputs.plan_artifact_url }} #URL to artifact
    permissions:
        deployments: write # Optional - Needed if you want to manage deployments
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.2"

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        run: |
          cd dev/
          terraform init

      - name: Terraform Apply
        run: |
          cd dev/
          terraform apply -auto-approve plan.txt
